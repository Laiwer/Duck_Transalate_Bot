from typing import Text
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.storage import FSMContext
from loader import dp, tsl
from aiogram.types import Message
from states.translateState import TranslateStates
from aiogram.utils.markdown import hbold
import loader as l


@dp.message_handler(Text(equals=["üìñ–ü–µ—Ä–µ–≤–µ—Å—Ç–∏üìñ"]))
async def translatorState1(message: Message, state: FSMContext):
    await message.answer(text="–ù–∞–ø–∏—à–∏—Ç–µ —Å–ª–æ–≤–æ –∏–ª–∏ –ø—Ä–∏–¥–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏")
    await TranslateStates.Q1.set()


@dp.callback_query_handler(state=TranslateStates.Q1)
async def translatorState3(message: Message, state: FSMContext):
    itog = tsl.translate(message.text, src=l.fromLang, dest=l.toLang)
    await message.answer(
        text=f"{hbold(message.text)}\n–≤ –ø–µ—Ä–µ–≤–æ–¥–µ –±—É–¥–µ—Ç\n{hbold(itog.text)}"
    )
    await state.finish()